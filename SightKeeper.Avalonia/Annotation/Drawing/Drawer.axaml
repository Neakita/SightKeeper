<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:local="clr-namespace:SightKeeper.Avalonia.Annotation.Drawing"
             xmlns:converters="clr-namespace:SightKeeper.Avalonia.Converters"
             xmlns:behaviors="clr-namespace:SightKeeper.Avalonia.Behaviors"
             xmlns:icons="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
             xmlns:system="clr-namespace:System;assembly=System.Runtime"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="SightKeeper.Avalonia.Annotation.Drawing.Drawer"
             x:DataType="local:DrawerDataContext">
    <Panel Classes="regular-margin"
           VerticalAlignment="Center"
           HorizontalAlignment="Center">
        <icons:MaterialIcon Kind="Image"
                            IsVisible="{Binding #Image.Source, Converter={x:Static ObjectConverters.IsNull}}"
                            RenderTransform="scale(0.5)"
                            Foreground="{StaticResource WatermarkSecondary}"
                            Opacity="0.05"/>
        <Image Name="Image">
            <Interaction.Behaviors>
                <behaviors:RecyclableScreenshotImageBindingBehavior
                    Screenshot="{Binding Screenshot}"
                    Composition="{StaticResource Composition}"/>
            </Interaction.Behaviors>
        </Image>
        <ListBox ItemsSource="{Binding Items}"
                 SelectedItem="{Binding SelectedItem}"
                 Name="ListBox"
                 ClipToBounds="False"
                 SelectionMode="Toggle">
            <Interaction.Behaviors>
                <local:DeselectListBoxItemOnClickOutsideOfItemBehavior/>
                <behaviors:AddPseudoClassOnGesturePressed ClassName="clickable-items">
                    <behaviors:AddPseudoClassOnGesturePressed.Gesture>
                        <KeyGesture>LeftCtrl</KeyGesture>
                    </behaviors:AddPseudoClassOnGesturePressed.Gesture>
                </behaviors:AddPseudoClassOnGesturePressed>
            </Interaction.Behaviors>
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <Canvas Name="Canvas"
                            Background="Transparent">
                        <Interaction.Behaviors>
                            <local:BoundingDrawingBehavior Command="{Binding CreateItemCommand}"
                                                           IsEnabled="{Binding IsEnabled}">
                                <local:BoundingDrawingBehavior.DrawingItemTemplate>
                                    <DataTemplate>
                                        <Rectangle Stroke="Red" StrokeThickness="1"/>
                                    </DataTemplate>
                                </local:BoundingDrawingBehavior.DrawingItemTemplate>
                            </local:BoundingDrawingBehavior>
                        </Interaction.Behaviors>
                    </Canvas>
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
            <ListBox.Template>
                <ControlTemplate>
                    <ItemsPresenter Name="PART_ItemsPresenter"
                                    ItemsPanel="{TemplateBinding ItemsPanel}"
                                    Margin="{TemplateBinding Padding}"/>
                </ControlTemplate>
            </ListBox.Template>
            <ListBox.ItemContainerTheme>
                <ControlTheme TargetType="ListBoxItem">
                    <Setter Property="Template">
                        <ControlTemplate>
                            <ContentPresenter Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Background="{TemplateBinding Background}"
                                              BorderBrush="{TemplateBinding BorderBrush}"
                                              BorderThickness="{TemplateBinding BorderThickness}"/>
                        </ControlTemplate>
                    </Setter>
                </ControlTheme>
            </ListBox.ItemContainerTheme>
            <ListBox.Styles>
                <Style Selector="ListBox:not(.clickable-items) ListBoxItem">
                    <Setter Property="IsHitTestVisible" Value="False"/>
                </Style>
                <Style Selector=":is(Panel)#ThumbsPanel">
                    <Setter Property="IsVisible" Value="False"/>
                </Style>
                <Style Selector="ListBoxItem:pointerover :is(Panel)#ThumbsPanel">
                    <Setter Property="IsVisible" Value="True"/>
                </Style>
                <Style Selector="ListBoxItem">
                    <Setter Property="ClipToBounds" Value="False"/>
                    <Setter Property="Canvas.Left">
                        <MultiBinding Converter="{x:Static converters:MultiplyConverter.Instance}">
                            <Binding Path="(local:BoundedItemDataContext).Bounding.Left"/>
                            <Binding Path="#ListBox.Bounds.Width"/>
                        </MultiBinding>
                    </Setter>
                    <Setter Property="Canvas.Top">
                        <MultiBinding Converter="{x:Static converters:MultiplyConverter.Instance}">
                            <Binding Path="(local:BoundedItemDataContext).Bounding.Top"/>
                            <Binding Path="#ListBox.Bounds.Height"/>
                        </MultiBinding>
                    </Setter>
                    <Setter Property="Width">
                        <MultiBinding Converter="{x:Static converters:MultiplyConverter.Instance}">
                            <Binding Path="(local:BoundedItemDataContext).Bounding.Width"/>
                            <Binding Path="#ListBox.Bounds.Width"/>
                        </MultiBinding>
                    </Setter>
                    <Setter Property="Height">
                        <MultiBinding Converter="{x:Static converters:MultiplyConverter.Instance}">
                            <Binding Path="(local:BoundedItemDataContext).Bounding.Height"/>
                            <Binding Path="#ListBox.Bounds.Height"/>
                        </MultiBinding>
                    </Setter>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="BorderBrush">
                        <MultiBinding>
                            <MultiBinding.Converter>
                                <local:ModifyBrushOpacityConverter Opacity="0.4"/>
                            </MultiBinding.Converter>
                            <Binding Path="(local:BoundedItemDataContext).Tag.Color"
                                     Converter="{x:Static local:UIntToBrushConverter.Instance}"/>
                        </MultiBinding>
                    </Setter>
                    <Setter Property="ZIndex"
                            Value="{Binding (local:BoundedItemDataContext).Bounding, Converter={x:Static local:ReverseBoundingAreaToIntConverter.Instance}}"/>
                    <Style Selector="^:pointerover">
                        <Setter Property="Background">
                            <MultiBinding>
                                <MultiBinding.Converter>
                                    <local:ModifyBrushOpacityConverter Opacity="0.1"/>
                                </MultiBinding.Converter>
                                <Binding Path="(local:BoundedItemDataContext).Tag.Color"
                                         Converter="{x:Static local:UIntToBrushConverter.Instance}"/>
                            </MultiBinding>
                        </Setter>
                    </Style>
                    <Style Selector="^:selected">
                        <Setter Property="ZIndex" Value="{x:Static system:Int32.MaxValue}"/>
                        <Setter Property="BorderBrush">
                            <MultiBinding>
                                <MultiBinding.Converter>
                                    <local:ModifyBrushOpacityConverter Opacity="0.8"/>
                                </MultiBinding.Converter>
                                <Binding Path="(local:BoundedItemDataContext).Tag.Color"
                                         Converter="{x:Static local:UIntToBrushConverter.Instance}"/>
                            </MultiBinding>
                        </Setter>
                    </Style>
                </Style>
            </ListBox.Styles>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <local:DrawerItem/>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
    </Panel>
</UserControl>